plugins {
    alias libs.plugins.fabric.loom
    alias libs.plugins.loom.quiltflower
    alias libs.plugins.publishing
    id 'maven-publish'
}
version = project.mod_version
group = project.maven_group

base {
    archivesName = project.archives_base_name
}

repositories {
    maven {
        name 'Quilt'
        url 'https://maven.quiltmc.org/repository/release'
    }
    maven {
        url 'https://jitpack.io'
    }
    maven { url "https://api.modrinth.com/maven" }
    maven { url "https://maven.terraformersmc.com/" }
    maven { url "https://jitpack.io" }
    maven { url "https://maven.jamieswhiteshirt.com/libs-release/" }
    maven { url "https://maven.shedaniel.me/" }
    maven { url "https://maven.terraformersmc.com/" }
    maven {
        name = 'Ladysnake Mods'
        url = 'https://maven.ladysnake.org/releases'
        content {
            includeGroup 'io.github.ladysnake'
            includeGroupByRegex 'io\\.github\\.onyxstudios.*'
            includeGroupByRegex 'dev\\.onyxstudios.*'
        }
    }
}

dependencies {
    minecraft(libs.minecraft)
    mappings(variantOf(libs.quilt.mappings) { classifier("intermediary-v2") })
    modImplementation(libs.fabric.loader)
    modImplementation(libs.fabric.api)
    modImplementation(libs.modmenu)
    modImplementation(libs.origins)

    implementation(libs.mixinextras)
    annotationProcessor(libs.mixinextras)
    include(libs.mixinextras)
}
publishMods {
    displayName = "Mob Origins v$project.version"
    file = remapJar.archiveFile
    changelog = file("$rootDir/CHANGELOG.md").text
    version = project.version
    type = STABLE
    modLoaders.addAll("fabric", "quilt")
    curseforge {
        projectId = "449974"
        minecraftVersions.add("1.20.2")
        accessToken = providers.environmentVariable("CF_API_KEY")
    }
    modrinth {
        projectId = "SXwBmSQG"
        minecraftVersions.add("1.20.2")
        accessToken = providers.environmentVariable("MODRINTH_TOKEN")
    }
    github {
        repository = "UltrusBot/MobOrigins"
        commitish = "1.20.2"
        accessToken = providers.environmentVariable("GH_TOKEN")
        tagName = "v$project.version"
    }

    dryRun = false
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
    var environment = System.getenv("ENVIRONMENT") ?: "production"
    if (environment != "production") {
        from(rootProject.rootDir.absolutePath + "/testdata") { into 'data' }
    }
}

jar {
    from("LICENSE") {
        rename { "LICENSE_${archives_base_name}" }
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.release = 17
}



java {
    withSourcesJar()
}


publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
}